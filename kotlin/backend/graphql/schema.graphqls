schema {
  query: Query
}

scalar LocalDate

scalar LocalDateTime

scalar LocalTime

type DayHeader {
  date: LocalDate!
}

type Query {
  sessions: [Session!]!

  """
   Returns a list of ScheduleItems to be displayed in the UI.

   ScheduleItems introduce day headers as well as time headers.
   They also make sure the sessions are sorted by start time/room and group them by time slot.

   A time slot is a manually configured time range. It usually corresponds to a 30-minute slot where 3 sessions can happen in parallel.
   Because some sessions are shorter, several of them may fit into a single time slot.

   ScheduleItems also filter out some
  """
  scheduleItems: [ScheduleItem!]!

  speakers: [Speaker!]!

  timezone: String!
}

type Room {
  name: String!

  rank: Int!

  floor: Int!
}

type Session {
  title: String!

  description: String!

  start: LocalDateTime!

  end: LocalDateTime!

  event_type: String!

  event_subtype: String!

  venue: String @deprecated(reason: "Use room instead")

  id: String!

  speakers: [Speaker!]!

  room: Room
}

type Speaker {
  username: String!

  company: String!

  position: String!

  name: String!

  about: String!

  location: String!

  url: String!

  years: [Int!]!

  avatar: String!

  sessions: [Session!]!
}

type TimeHeader {
  start: LocalTime!

  end: LocalTime!
}

union ScheduleItem = Session|DayHeader|TimeHeader

type __Schema {
  description: String

  types: [__Type!]!

  queryType: __Type!

  mutationType: __Type

  subscriptionType: __Type

  directives: [__Directive!]!
}

type __Type {
  kind: __TypeKind!

  name: String

  description: String

  fields(includeDeprecated: Boolean = false): [__Field!]

  interfaces: [__Type!]

  possibleTypes: [__Type!]

  enumValues(includeDeprecated: Boolean = false): [__EnumValue!]

  inputFields(includeDeprecated: Boolean = false): [__InputValue!]

  ofType: __Type

  specifiedByURL: String
}

enum __TypeKind {
  SCALAR

  OBJECT

  INTERFACE

  UNION

  ENUM

  INPUT_OBJECT

  LIST

  NON_NULL
}

type __Field {
  name: String!

  description: String

  args(includeDeprecated: Boolean = false): [__InputValue!]!

  type: __Type!

  isDeprecated: Boolean!

  deprecationReason: String
}

type __InputValue {
  name: String!

  description: String

  type: __Type!

  defaultValue: String

  isDeprecated: Boolean!

  deprecationReason: String
}

type __EnumValue {
  name: String!

  description: String

  isDeprecated: Boolean!

  deprecationReason: String
}

type __Directive {
  name: String!

  description: String

  locations: [__DirectiveLocation!]!

  args(includeDeprecated: Boolean = false): [__InputValue!]!

  isRepeatable: Boolean!
}

enum __DirectiveLocation {
  QUERY

  MUTATION

  SUBSCRIPTION

  FIELD

  FRAGMENT_DEFINITION

  FRAGMENT_SPREAD

  INLINE_FRAGMENT

  VARIABLE_DEFINITION

  SCHEMA

  SCALAR

  OBJECT

  FIELD_DEFINITION

  ARGUMENT_DEFINITION

  INTERFACE

  UNION

  ENUM

  ENUM_VALUE

  INPUT_OBJECT

  INPUT_FIELD_DEFINITION
}

directive @skip (if: Boolean!) on FIELD|FRAGMENT_SPREAD|INLINE_FRAGMENT

directive @include (if: Boolean!) on FIELD|FRAGMENT_SPREAD|INLINE_FRAGMENT

directive @deprecated (reason: String! = "No longer supported") on FIELD_DEFINITION|ARGUMENT_DEFINITION|INPUT_FIELD_DEFINITION|ENUM_VALUE

directive @defer (label: String, if: Boolean! = true) on FRAGMENT_SPREAD|INLINE_FRAGMENT

directive @specifiedBy (url: String!) on SCALAR
